@using Microsoft.AspNetCore.Identity
@using EmployeeApp.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - EmployeeApp</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        body {
            margin: 0;
            padding: 0;
            display: flex;
        }

        #sidebar {
            width: 220px;
            height: 100vh;
            background-color: #343a40;
            padding-top: 70px;
            position: fixed;
        }

            #sidebar a {
                color: white;
                display: block;
                padding: 10px 20px;
                text-decoration: none;
            }

                #sidebar a:hover {
                    background-color: #495057;
                }

        #main-content {
            width: 100%;
        }

        .with-sidebar #main-content {
            margin-left: 220px;
            width: calc(100% - 220px);
        }

        .navbar {
            position: fixed;
            width: 100%;
            z-index: 1000;
        }
    </style>
</head>
<body class="@(SignInManager.IsSignedIn(User) ? "with-sidebar" : "")">

    <!-- Top Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary px-3">
        <div class="container-fluid">
            <a class="navbar-brand fw-bold text-white" href="/">EmployeeApp</a>
            <div class="ms-auto d-flex align-items-center">
                @if (SignInManager.IsSignedIn(User))
                {
                    var user = await UserManager.GetUserAsync(User);
                    if (user != null)
                    {
                        var roles = await UserManager.GetRolesAsync(user);
                        var userRole = roles.FirstOrDefault() ?? "User";
                        <span class="text-white me-3">👤 @user.UserName (@userRole)</span>
                    }

                    <!-- Logout Trigger -->
                    <a href="javascript:void(0);" onclick="showLogoutModal()" class="btn btn-light btn-sm">Logout</a>
                }
                else
                {
                    <a class="nav-link text-white" href="/Account/Login">Login</a>
                }
            </div>
        </div>
    </nav>

    <!-- Sidebar (only visible after login) -->
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        if (user != null)
        {
            var roles = await UserManager.GetRolesAsync(user);
            var isAdmin = roles.Contains("Admin");

            <div id="sidebar">
                <a href="/Dashboard/Index">Dashboard</a>

                @if (isAdmin)
                {
                    <a href="/EmployeeManagement/Index">Employee Management</a>
                    <a href="/Leaves/Admin">Leaves</a>
                    <a href="/Calendar/Admin">Calendar</a>
                    <a href="/Auditing/Index">Auditing</a>
                }
                else
                {
                    <a href="/Profile/User">My Profile</a>
                    <a href="/Leaves/User">Leaves</a>
                    <a href="/Calendar/User">Calendar</a>
                }

                <a href="/Settings/Index">Settings</a>
            </div>
        }
    }

    <!-- Main Content -->
    <div id="main-content" class="pt-5 mt-3">
        <div class="container mt-4">
            @RenderBody()
        </div>
    </div>

    <!-- Logout Modal -->
    <div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="logoutModalLabel">Confirm Logout</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Do you really want to log out?
                </div>
                <div class="modal-footer">
                    <form method="post" action="/Account/Logout">
                        <input name="__RequestVerificationToken" type="hidden" value="@Antiforgery.GetTokens(HttpContextAccessor.HttpContext).RequestToken" />
                        <button type="submit" class="btn btn-danger">Yes, Logout</button>
                    </form>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No, Stay Logged In</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        function showLogoutModal() {
            var logoutModal = new bootstrap.Modal(document.getElementById('logoutModal'));
            logoutModal.show();
        }

        $(document).ready(function () {
            $('.event').on('click', function () {
                var eventTitle = $(this).text();
                var eventType = $(this).attr('class').split(' ')[1]; // leave or holiday
                alert('Event: ' + eventTitle + '\nType: ' + eventType);
            });

            $('.day-number').hover(function () {
                $(this).css('cursor', 'pointer');
            });
        });
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>
