@page
@model EmployeeApp.Pages.Calendar.UserModel
@{
    ViewData["Title"] = "Employee Calendar";
    Layout = "_Layout";
}

<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css" rel="stylesheet" />

<style>
    .today-highlight {
        background-color: #f0ad4e !important;
        color: white !important;
        font-weight: bold;
    }

    .fc-daygrid-day-number {
        cursor: pointer;
    }
</style>

<div class="container mt-4">
    <h2>Company Calendar</h2>
    <div id="calendar"></div>
</div>

<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eventModalLabel">Events on <span id="modalDate"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalEventDetails">
                <!-- Event details will be loaded here dynamically -->
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar/index.global.min.js'></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var allEvents = [];

        fetch('/Calendar/User?handler=Events')
            .then(response => response.json())
            .then(fetchedEvents => {
                allEvents = fetchedEvents;

                var calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'dayGridMonth',
                    events: allEvents,
                    eventDisplay: 'none',

                    dayCellContent: function (arg) {
                        var dateStr =arg.date.getFullYear() + '-' +
                   String(arg.date.getMonth() + 1).padStart(2, '0') + '-' +
                   String(arg.date.getDate()).padStart(2, '0');

                        var eventsOnThisDay = allEvents.filter(function (event) {
                            return event.start === dateStr;
                        });

                        var leaveCount = eventsOnThisDay.filter(e => e.type === "Leave").length;
                        var holidayCount = eventsOnThisDay.filter(e => e.type === "Holiday").length;

                        let countText = '';
                        if (leaveCount > 0) countText += `${leaveCount} Leave${leaveCount > 1 ? 's' : ''}<br>`;
                        if (holidayCount > 0) countText += `${holidayCount} Holiday${holidayCount > 1 ? 's' : ''}`;

                        return {
                            html: `<div style="font-size:10px">${arg.dayNumberText}<br>${countText}</div>`
                        };
                    },

                    dateClick: function(info) {
    console.log(info.dateStr);
                        var clickedDate = info.dateStr;

                        var events = allEvents.filter(function (event) {
                            return event.start === clickedDate;
                        });

                        var modalBody = document.getElementById('modalEventDetails');
                        modalBody.innerHTML = '';

                        if (events.length > 0) {
                            events.forEach(function (e) {
                                var div = document.createElement('div');
                                div.innerHTML = `<b>${e.type}:</b> ${e.title}`;
                                modalBody.appendChild(div);
                            });
                        } else {
                            modalBody.innerHTML = '<p>No events for this day.</p>';
                        }

                        var options = { year: 'numeric', month: 'long', day: 'numeric' };
                        var formattedDate = new Date(clickedDate).toLocaleDateString('en-US', options);

                        document.getElementById('modalDate').innerText = formattedDate;

                        var modal = new bootstrap.Modal(document.getElementById('eventModal'));
                        modal.show();
                    }
                });

                    calendar.render();
    console.log("Calendar rendered");

            })
            .catch(error => {
                console.error('Error fetching events:', error);
                alert('There was an error while fetching events!');
            });
    });
</script>

