@page
@model EmployeeApp.Pages.EmployeeManagement.IndexModel
@{
    ViewData["Title"] = "Employee Management";
    var successMessage = TempData["EmployeeAdded"] as string;
}

<div class="container mt-4">
    <h2 class="mb-4">Employee Management</h2>

    <!-- Display success message if exists -->
    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success">
            @successMessage
        </div>
    }

    <input type="text" id="searchBox" class="form-control mb-3" placeholder="Search Employees by Name (Min 3 letters)" />

    <!-- Search Result or Table -->
    <div id="searchResults"></div>

    <!-- Main Employee Table -->
    <div id="employeeTable">
        <a asp-page="Create" class="btn btn-primary mb-3" id="addEmployeeBtn">Add Employee</a>

        <table class="table table-hover table-bordered">
            <thead class="table-primary">
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th>Department</th>
                    <th>Salary</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var employee in Model.Employees)
                {
                    <tr id="row-@employee.Id">
                        <td>@employee.Name</td>
                        <td>@employee.Email</td>
                        <td>@employee.PhoneNumber</td>
                        <td>@employee.Department</td>
                        <td>@((int)Math.Floor(employee.Salary))</td>
                        <td>
                            <a asp-page="Edit" asp-route-id="@employee.Id" class="btn btn-warning btn-sm">Edit</a>
                            <button class="btn btn-danger btn-sm delete-btn"
                                    data-id="@employee.Id"
                                    data-name="@employee.Name"
                                    data-bs-toggle="modal"
                                    data-bs-target="#deleteModal">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination -->
        <nav id="pagination">
            <ul class="pagination">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(Model.CurrentPage - 1)">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="?page=@i">@i</a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(Model.CurrentPage + 1)">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete <strong id="employeeName"></strong>?
                <input type="hidden" id="employeeId" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

<form method="post">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        document.getElementById("searchBox").addEventListener("input", function () {
            let query = this.value.trim();
            let resultsDiv = document.getElementById("searchResults");
            let employeeTable = document.getElementById("employeeTable");
            let pagination = document.getElementById("pagination");

            if (query.length === 0) {
                resultsDiv.innerHTML = "";
                employeeTable.style.display = "block";
                if (pagination) pagination.style.display = "block";
                return;
            }

            if (query.length < 3) {
                resultsDiv.innerHTML = "<div class='alert alert-info'>Please enter at least 3 characters.</div>";
                employeeTable.style.display = "none";
                if (pagination) pagination.style.display = "none";
                return;
            }

            employeeTable.style.display = "none";
            if (pagination) pagination.style.display = "none";

            fetch(`/EmployeeManagement/Index?handler=Search&term=${query}`)
                .then(response => response.json())
                .then(data => {
                    resultsDiv.innerHTML = "";

                    if (data.length === 0) {
                        resultsDiv.innerHTML = `<div class="alert alert-warning">No matching employees found.</div>`;
                        return;
                    }

                    let table = `<table class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Email</th>
                                            <th>Phone</th>
                                            <th>Department</th>
                                            <th>Salary</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>`;

                    data.forEach(emp => {
                        table += `<tr>
                                    <td>${emp.name}</td>
                                    <td>${emp.email}</td>
                                    <td>${emp.phoneNumber}</td>
                                    <td>${emp.department}</td>
                                    <td>${emp.salary}</td>
                                    <td>
                                        <a href="/EmployeeManagement/Edit?id=${emp.id}" class="btn btn-sm btn-primary">Edit</a>
                                        <a href="/EmployeeManagement/Delete?id=${emp.id}" class="btn btn-sm btn-danger">Delete</a>
                                    </td>
                                </tr>`;
                    });

                    table += `</tbody></table>`;
                    resultsDiv.innerHTML = table;
                })
                .catch(error => {
                    console.error("Error fetching search results:", error);
                    resultsDiv.innerHTML = `<div class="alert alert-danger">Something went wrong.</div>`;
                });
        });

        $(document).ready(function () {
            var deleteId = 0;

            $(".delete-btn").click(function () {
                deleteId = $(this).data("id");
                $("#employeeName").text($(this).data("name"));
                $("#employeeId").val(deleteId);
            });

            $("#confirmDelete").click(function () {
                var empId = $("#employeeId").val();
                var token = $("input[name='__RequestVerificationToken']").val();

                $.ajax({
                    url: "?handler=Delete",
                    type: "POST",
                    data: { id: empId, __RequestVerificationToken: token },
                    success: function (response) {
                        if (response.success) {
                            $("#deleteModal").modal("hide");
                            $("#row-" + empId).fadeOut();
                        } else {
                            alert("Failed to delete: " + response.message);
                        }
                    },
                    error: function () {
                        alert("Error deleting employee.");
                    }
                });
            });

            $('#addEmployeeBtn').hover(
                function () { $(this).css('background', 'green'); },
                function () { $(this).css('background', ''); }
            );

            // Check if success message exists and trigger redirection
            if ("@TempData["EmployeeAdded"]" != "") {
                // Delay redirection to allow message to show
                setTimeout(function () {
                    window.location.href = '/EmployeeManagement/Index';
                }, 2000); // Delay of 2 seconds before redirect
            }
        });
    </script>
}
